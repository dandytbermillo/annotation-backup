name: Option A Tests

# This workflow tests Option A (plain mode) functionality
# NOTE: Electron tests must be run locally - see scripts/test-electron-plain-mode.sh

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  option-a:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: annotation_dev
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/annotation_dev
      NEXT_PUBLIC_COLLAB_MODE: plain

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Postgres client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Install dependencies
        run: npm ci

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then exit 0; fi
            sleep 1
          done
          echo "Postgres not ready" >&2
          exit 1

      - name: Run DB migrations
        run: npm run db:migrate

      - name: Type check
        run: npm run type-check
        continue-on-error: true  # Remove after fixing blocking errors

      - name: Lint
        run: npm run lint

      - name: Check renderer DB isolation (no pg in renderer)
        run: |
          echo "Checking that renderer has no direct pg imports..."
          if grep -R -n "from 'pg'\|require(\"pg\"\|'pg'\)" app components; then
            echo "Found pg import in renderer (app/components). Failing."
            exit 1
          else
            echo "✓ No pg imports in renderer"
          fi

      - name: Run plain mode integration script
        run: ./scripts/test-plain-mode.sh
        continue-on-error: false

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: plain-mode-logs
          path: /tmp/plain-mode-test.log
          
      - name: Check for Yjs imports in plain mode files
        run: |
          echo "Checking for Yjs imports in plain mode files..."
          if grep -r "from 'yjs'\|from 'y-" lib/providers/plain-offline-provider.ts lib/adapters/*-offline-adapter.ts components/canvas/tiptap-editor-plain.tsx lib/utils/text-anchoring.ts lib/models/annotation.ts; then
            echo "ERROR: Found Yjs imports in plain mode files"
            exit 1
          else
            echo "✓ No Yjs imports found in plain mode files"
          fi
          
      - name: Run unit tests for plain mode
        run: npm test -- __tests__/plain-mode/ --passWithNoTests
        env:
          NEXT_PUBLIC_COLLAB_MODE: plain
          
      - name: Test 10 TipTap fixes preservation
        run: npm test -- __tests__/plain-mode/ten-fixes-preservation.test.ts --passWithNoTests
        
      - name: Test annotation workflow
        run: npm test -- __tests__/plain-mode/annotation-workflow.test.ts --passWithNoTests

      - name: Local sound notification (best-effort)
        if: always()
        run: |
          echo "Running local notify (best-effort; may be no-op on CI)"
          if [ -f ./scripts/notify.sh ]; then
            if [ "${{ job.status }}" = "success" ]; then
              bash ./scripts/notify.sh 0 || true
            else
              bash ./scripts/notify.sh 1 || true
            fi
          else
            echo "notify.sh not found; skipping"
          fi
      
      # NOTE: Electron tests are not run in CI as they require an Electron environment
      # Run ./scripts/test-electron-plain-mode.sh locally for Electron-specific testing
