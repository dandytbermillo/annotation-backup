This patch is a preview only (do not apply directly here). It unifies the layer context, ensures canvas gating engages when popups are active, and caps panel z-index so panels cannot outrank overlays.

---

1) Wrap the whole app with a single LayerProvider

*** Begin Patch
*** Update File: components/annotation-app.tsx
@@
-import { useLayer } from "@/components/canvas/layer-provider"
+import { useLayer, LayerProvider } from "@/components/canvas/layer-provider"
@@
-  return (
-    <div className="flex h-screen w-screen overflow-hidden relative">
+  return (
+    <LayerProvider initialPopupCount={0}>
+    <div className="flex h-screen w-screen overflow-hidden relative">
@@
-    </div>
-  )
+    </div>
+    </LayerProvider>
+  )
*** End Patch

---

2) Remove the nested LayerProvider inside NotesExplorer

A) Drop the local LayerProvider import

*** Begin Patch
*** Update File: components/notes-explorer-phase1.tsx
@@
-import { LayerProvider } from "@/components/canvas/layer-provider"
 import { PopupOverlay } from "@/components/canvas/popup-overlay"
 import { useLayer } from "@/components/canvas/layer-provider"
*** End Patch

B) Stop wrapping NotesExplorerContent in a local provider

*** Begin Patch
*** Update File: components/notes-explorer-phase1.tsx
@@
 export function NotesExplorerPhase1(props: NotesExplorerProps) {
   const multiLayerEnabled = useFeatureFlag('ui.multiLayerCanvas' as any)
-  
-  if (multiLayerEnabled) {
-    return (
-      <LayerProvider initialPopupCount={0}>
-        <NotesExplorerContent {...props} multiLayerEnabled={true} />
-      </LayerProvider>
-    )
-  }
-  
-  return <NotesExplorerContent {...props} multiLayerEnabled={false} />
+  return <NotesExplorerContent {...props} multiLayerEnabled={multiLayerEnabled} />
 }
*** End Patch

C) Keep the click‑outside blocker active even while dragging a popup

*** Begin Patch
*** Update File: components/notes-explorer-phase1.tsx
@@
-      {/* Click outside to close all popovers */}
-      {hoverPopovers.size > 0 && !draggingPopup && (
+      {/* Click outside to close all popovers (also active while dragging) */}
+      {hoverPopovers.size > 0 && (
         <div
           className="fixed inset-0"
           style={{ zIndex: 9997 }}
           onClick={closeAllPopovers}
         />
       )}
*** End Patch

---

3) Cap panel z-index; avoid Date.now() runaway values

A) Add a small module-scope z-index counter

*** Begin Patch
*** Update File: components/canvas/canvas-panel.tsx
@@
 import type { PlainOfflineProvider } from "@/lib/providers/plain-offline-provider"
 
 const TiptapEditorCollab = dynamic(() => import('./tiptap-editor-collab'), { ssr: false })
 
+// Keep panel z-index below popup overlay. Start low and cap under 100.
+let nextPanelZIndex = 10
*** End Patch

B) Replace the Date.now() z-boost with the capped counter

*** Begin Patch
*** Update File: components/canvas/canvas-panel.tsx
@@
-      // Bring panel to front
-      setZIndex(Date.now())
 +      // Bring panel to front (controlled z-index, capped below popup overlay)
+      setZIndex(() => {
+        const z = nextPanelZIndex
+        nextPanelZIndex = Math.min(z + 1, 90)
+        return z
+      })
*** End Patch

---

Post-apply verification checklist
- Indicator shows "popups" when any popup is open; "notes" when none.
- Canvas container has pointer-events: none while "popups" is active; panels are not draggable.
- Dragging a popup does not re-enable canvas interactions.
- A dragged panel’s computed z-index remains under popup/overlay layers.

